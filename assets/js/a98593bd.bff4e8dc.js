"use strict";(self.webpackChunkcode_craft=self.webpackChunkcode_craft||[]).push([[9066],{5261:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"kafka/semana-2","title":"Semana 2 - Kafka Producer com C#","description":"\ud83c\udfaf Objetivos","source":"@site/docs/kafka/semana-2.md","sourceDirName":"kafka","slug":"/kafka/semana-2","permalink":"/code-craft/docs/kafka/semana-2","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/kafka/semana-2.md","tags":[],"version":"current","frontMatter":{"id":"semana-2","title":"Semana 2 - Kafka Producer com C#"},"sidebar":"tutorialSidebar","previous":{"title":"Semana 1 - Fundamentos e Kafka","permalink":"/code-craft/docs/kafka/semana-1"},"next":{"title":"Semana 3 - Kafka Consumer com C#","permalink":"/code-craft/docs/kafka/semana-3"}}');var r=n(4848),s=n(8453);const t={id:"semana-2",title:"Semana 2 - Kafka Producer com C#"},c="Semana 2 - Produ\xe7\xe3o de Mensagens com C#",i={},d=[{value:"\ud83c\udfaf Objetivos",id:"-objetivos",level:2}];function l(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"semana-2---produ\xe7\xe3o-de-mensagens-com-c",children:"Semana 2 - Produ\xe7\xe3o de Mensagens com C#"})}),"\n",(0,r.jsx)(a.h2,{id:"-objetivos",children:"\ud83c\udfaf Objetivos"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"Criar um projeto .NET"}),"\n",(0,r.jsx)(a.li,{children:"Instalar e configurar Confluent.Kafka"}),"\n",(0,r.jsx)(a.li,{children:"Criar produtor Kafka com C#"}),"\n",(0,r.jsx)(a.li,{children:"Enviar mensagens para t\xf3pico Kafka"}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:"1\ufe0f\u20e3 Criar um projeto .NET"}),"\n",(0,r.jsx)(a.p,{children:"No terminal, rode:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:"dotnet new console -n KafkaProducerDemo\ncd KafkaProducerDemo\n"})}),"\n",(0,r.jsx)(a.p,{children:"Isso cria um app console chamado KafkaProducerDemo."}),"\n",(0,r.jsx)(a.p,{children:"2\ufe0f\u20e3 Instalar e configurar Confluent.Kafka"}),"\n",(0,r.jsx)(a.p,{children:"Dentro da pasta do projeto:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:"dotnet add package Confluent.Kafka\n"})}),"\n",(0,r.jsx)(a.p,{children:"Isso baixa o client oficial Kafka para .NET."}),"\n",(0,r.jsx)(a.p,{children:"3\ufe0f\u20e3 Criar o produtor Kafka com C#"}),"\n",(0,r.jsx)(a.p,{children:"Abra o arquivo Program.cs e substitua o conte\xfado por:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:'using Confluent.Kafka;\n\nclass Program\n{\n    static async Task Main(string[] args)\n    {\n        var config = new ProducerConfig\n        {\n            BootstrapServers = "localhost:9092" // endere\xe7o do Kafka\n        };\n\n        using var producer = new ProducerBuilder<Null, string>(config).Build();\n\n       try\n        {\n            await producer.ProduceAsync(\n                "topico-teste-tutorial",   // nome do t\xf3pico no Kafka\n                new Message<Null, string> { Value = "treino kafka c#" }\n            );\n            for (int i = 0; i < 5; i++)\n            {\n                var message = $"Mensagem {i}";\n                var result = await producer.ProduceAsync(\n                    "topico-teste-tutorial",   // nome do t\xf3pico no Kafka\n                    new Message<Null, string> { Value = message }\n                );\n\n                \n\n                Console.WriteLine($"\u2714 Enviado: \'{result.Value}\' para {result.TopicPartitionOffset}");\n            }\n        }\n        catch (ProduceException<Null, string> e)\n        {\n            Console.WriteLine($"\u274c Erro ao enviar: {e.Error.Reason}");\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(a.p,{children:"4\ufe0f\u20e3 Enviar mensagens para um t\xf3pico Kafka"}),"\n",(0,r.jsx)(a.p,{children:"Certifique-se de que o Kafka est\xe1 rodando localmente (localhost:9092).\nSe voc\xea usa Docker, pode iniciar assim:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:"docker compose up -d\n"})}),"\n",(0,r.jsxs)(a.p,{children:["(desde que tenha um docker-compose.yml do Kafka j\xe1 configurado, caso ainda n\xe3o tenha basta seguir a se\xe7\xe3o  ",(0,r.jsx)(a.a,{href:"https://marinaviana.github.io/code-craft/docs/kafka/semana-1#-3-instala%C3%A7%C3%A3o-kafka-usando-docker",children:"Instala\xe7\xe3o Kafka usando Docker"})," da semana 1: Fundamentos de Mensageria e Kafka)."]}),"\n",(0,r.jsx)(a.p,{children:"Crie um t\xf3pico no Kafka (caso ainda n\xe3o exista):"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:"kafka-topics.sh --create --topic topico-teste-tutorial --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1\n"})}),"\n",(0,r.jsx)(a.p,{children:"Rode o programa:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:"dotnet run\n"})}),"\n",(0,r.jsx)(a.p,{children:"Voc\xea deve ver as mensagens sendo enviadas e confirmadas no terminal."})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>t,x:()=>c});var o=n(6540);const r={},s=o.createContext(r);function t(e){const a=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(s.Provider,{value:a},e.children)}}}]);